* $Header:$
* $Log:$
*
      SUBROUTINE OUINIT
C
C     ******************************************************************
C     *                                                                *
C     *       USER's routine called at the end of initialization       *
C     *                                                                *
C     *    ==>Called by : OMGINIT                                      *
C     *                                                                *
C     ******************************************************************
C
      IMPLICIT NONE
#if defined OMGEANT_VERSION
      CHARACTER*80 VersionString
      DATA VersionString /
     & '$Id:$'/
#endif
C
#include "geant321/gconst.inc"
#include "geant321/gcunit.inc"
#include "geant321/gcflag.inc"
#include "omgeant/omcfla.inc"
#include "omgeant/omcbeam.inc"
#include "omgeant/omcunit.inc"
#include "omgeant/ranma2.inc"
#include "moller/cmolmag.inc"
#include "moller/cescatt.inc"
#include "moller/cdegtnt.inc"
#include "moller/cmagpar.inc"
#include "moller/comnfla.inc"
C
      COMMON/CCSMOTT/ CSDMOTT(4),ALMOTT
      REAL            CSDMOTT,ALMOTT
C---                  CSMOTT(1:3) = E0 electron (LAB), Z target, A target.
C---                  ALMOTT      - exponential slope of the variable
C
      COMMON/CPHOTPR/ EBEAMPH   ! Bremstr. photoproduction: beam energy
     +               ,IPARTPH   ! Produced particle 
     +               ,TARGLPH   ! H2 target length (cm) 
     +               ,BFLUXPH   ! e- beam flux (particles per time_interval/pulse...
      REAL            EBEAMPH,TARGLPH,BFLUXPH
      INTEGER         IPARTPH
C
C
      COMMON/CKINTMP/ KEMPROC,EEMPROC,THCMEMPROC
      INTEGER KEMPROC
      REAL EEMPROC,THCMEMPROC
C
      INTEGER  IDHNEW
      REAL     HSUM,CSMOTT,PHOTSPEC,RADMOTT
      EXTERNAL HSUM,CSMOTT,PHOTSPEC,RADMOTT
C,ANPWEMPR
C      REAL HRNDM1,RADMOT1
C      EXTERNAL    RADMOT1
C
      INTEGER i,itart,nbuf,itrttg,itrtut,nbin,nbinl,lrec,mag
      CHARACTER namtarg*20,cproc*16,cn*4
      REAL    r0,atarg,chtarg,tltarg,ubuf(20),csfac,gam,ebeam,crosec
     +       ,ctstep,phmx,x1,x2,ratem,rateh,t1,t2,y1,y2,crosec1
     +       ,xl1,xl2,aa,bb,ratefac
C
      DATA r0/2.818/  ! electron radius in fm
C
C     ------------------------------------------------------------------
C
      ratefac=6.02*1.E-1*1.E-6/1.602E-19 ! Avog, 1uA
C
      NMOLMAG=0
      DO i=1,MXMOLMAG
        IF(MOLMAGP(1,i).NE.0) NMOLMAG=i
      END DO
C
      NMAGN=0
      DO mag=1,MXMAGN
         CALL UHTOC(MAGNPAR(2,mag),4,cn,4)
         IF(cn.NE.'    ') NMAGN=mag
      END DO
      IF(NMAGN.GT.0) THEN
         WRITE(LOUT,1800)
         DO mag=1,NMAGN
            CALL UHTOC(MAGNPAR(2,mag),4,cn,4)
            WRITE(LOUT,1820) mag,MAGNPAR(1,mag),cn
     +        ,(AMAGNPAR(i,mag),i=3,5) 
     +        ,( MAGNPAR(i,mag),i=6,6) 
     +        ,(AMAGNPAR(i,mag),i=7,MXMAGNP) 
         END DO
      ENDIF
C
C      WRITE(6,*) ' IESCATT=',IESCATT
C
      IF(IOMEXKIN.EQ.1.OR.IOMEXKIN.EQ.6) THEN
C
C---    Moller/Bhabha/Annih scattering
C
         CALL OMOLINI
C
      ELSE IF(IOMEXKIN.EQ.2) THEN
C
         cproc='         Mott   '
C
C---       Find the exp slope 
C

         ebeam=(BEAMOLIM(1)+BEAMOLIM(2))/2.
         CSDMOTT(1)=ebeam
         CALL GFPART(MOTTARG,namtarg,itrttg,atarg,chtarg,tltarg
     +              ,ubuf,nbuf) 
         IF(itrttg.EQ.0) THEN
            WRITE(LOUT,*) '*** OUINIT error: MOTTARG is not defined'
     +                    ,MOTTARG
            atarg=1.
            chtarg=1.
            IEORUN=1
         ENDIF
         CSDMOTT(2)=chtarg
         CSDMOTT(3)=atarg
         ALMOTT=0.
C
         phmx=(PHIMOT(2)-PHIMOT(1))*PI/180.
         crosec1=0.
C
         t1=THETMOT(1)*PI/180.
         t2=THETMOT(2)*PI/180.
         IDMOTT=IDHNEW(-1)
         IF(IRADMOT.EQ.0) THEN
            nbin=1000
            CALL HBFUN1(IDMOTT,'Mott vs theta',nbin,t1,t2,CSMOTT)
            crosec=HSUM(IDMOTT)*(t2-t1)/nbin*phmx
         ELSE
            cproc=' Radiative Mott '
C            nbin=200
            nbin=20
            nbinl=10
            xl1=RADMOTL(1)
            xl2=RADMOTL(2)
            CALL HBFUN2(IDMOTT,'Rad. Mott vs theta vs Eloss'
     +                 ,nbin,t1,t2,nbinl,xl1,xl2,RADMOTT)
            crosec=HSUM(IDMOTT)*(t2-t1)/nbin*phmx*(xl2-xl1)/nbinl*ebeam
C            CALL HBFUN1(102,'Mott '
C     +                 ,nbin,t1,t2,RADMOT1)
         ENDIF

         IF(IMOTTWG.NE.2) THEN
            IF(IRADMOT.EQ.0) THEN
               y1=CSMOTT(t1)
               y2=CSMOTT(t2)
            ELSE
               y1=RADMOTT(t1,0.5)
               y2=RADMOTT(t2,0.5)
            ENDIF
            ALMOTT=-(ALOG(y2)-ALOG(y1))/(t2-t1)
            ALPHMOTT=ALMOTT
            x1=EXP(-ALMOTT*t2)
            x2=EXP(-ALMOTT*t1)
C
            IF(IRADMOT.EQ.0) THEN
C               CALL HCOPY(IDMOTT,102,'    ')
               CALL HDELET(IDMOTT)
               CALL HBFUN1(IDMOTT,'Mott vs exp(-aph*thet)'
     +                 ,nbin,x1,x2,CSMOTT)
               crosec1=HSUM(IDMOTT)*(x2-x1)/nbin*phmx
            ELSE
               IDRADMOT=IDHNEW(-1)
               CALL HBFUN2(IDRADMOT
     +                 ,'Rad. Mott vs exp(-alp*thet)theta vs Eloss'
     +                 ,nbin,x1,x2,nbinl,xl1,xl2,RADMOTT)
            ENDIF
            WRITE(LOUT,1050) cproc,ALMOTT,x1,x2,y1,y2
         ENDIF          
C     
         ratem=crosec*0.003*7.87/55.85*ratefac
         IF(CSDMOTT(2).LT.1.1) ratem=ratem*26.
         rateh=crosec*100.0*0.07080/1.*ratefac
         WRITE(LOUT,1100) cproc,THETMOT(1),THETMOT(2)
     +                   ,PHIMOT(1),PHIMOT(2),crosec,crosec1
         WRITE(LOUT,1200) cproc,ratem,cproc,rateh
C
      ELSE IF(IOMEXKIN.EQ.3) THEN
C
         cproc='Bremst. photopr.'
         IDPHOTPR=IDHNEW(-1)
         EBEAMPH=(BEAMOLIM(1)+BEAMOLIM(2))/2.
         IPARTPH=IPHOTPR
         BFLUXPH=1.E11
         TARGLPH=150.
         CALL HBFUN2(IDPHOTPR,'Photo-prod theta/pmom'
     +       ,100,THETPHPR(1),THETPHPR(2)
     +       ,100,PMOMPHPR(1),PMOMPHPR(2),PHOTSPEC)
C         
         rateh=HSUM(IDPHOTPR)*(THETPHPR(2)-THETPHPR(1))/100
     +                       *(PMOMPHPR(2)-PMOMPHPR(1))/100
         WRITE(LOUT,1300) cproc,IPARTPH,rateh
     +                         ,THETPHPR(1),THETPHPR(2)
     +                         ,PMOMPHPR(1),PMOMPHPR(2)
     +                         ,TARGLPH,BFLUXPH
C
      ELSE IF(IOMEXKIN.EQ.4) THEN
C
         cproc='VMeson photopr.'
C
         IF(IPHOTVMP.LE.0.OR.IPHOTVMP.GT.99999.OR.
     +      IPHOTVMT.LE.0.OR.IPHOTVMT.GT.99999.OR.
     +      PHOTVMTT.LE.0..OR.PHOTVMTT.GT.9999.) THEN
            WRITE(LOUT,1500) cproc,IPHOTVMP,IPHOTVMT,PHOTVMTT
            IEORUN=1
         ENDIF
C
      ELSE IF(IOMEXKIN.EQ.5) THEN
C
         cproc='Mott on lead'
C
C!         CALL NSETUP
C
         WRITE(LOUT,1100) cproc,THETMOT(1),THETMOT(2)
     +                   ,PHIMOT(1),PHIMOT(2),0.,0.
C
C
      ENDIF
C
      IF(LUNDNT.NE.0) CALL ODEGNTIN
C
C---      File with event RNDM seeds
C
      IF(ISAVRND.NE.0) THEN
         lrec=(MXRMSEQ*103+1)*4
         OPEN(LUNOMG(5),FILE='cntevseeds.dat',ACCESS='DIRECT'
     +       ,FORM='UNFORMATTED',RECL=lrec)
         WRITE(LOUT,1700) LUNOMG(5),lrec
      ENDIF
C
 999  RETURN
 1050 FORMAT( ' === ',A16,' cross-section '
     +     ,' x=exp(-',E12.4,'*theta), x1,x2=',4E12.4)
 1100 FORMAT(/' === ',A16,' cross-section '
     +     ,F11.6,'<theta LAB<',F11.6,2X,F7.2,'<phi LAB<',F7.2,' deg'
     +     ,' are ',E12.4,2X,E12.4,' barn per one target nucleus')
 1200 FORMAT(' === ',A16,' event rate/sec =',E12.4
     +     ,' for 0.003cm Fe target, 1.microA'
     +     /,' === ',A16,' event rate/sec =',E12.4
     +     ,' for 100.0cm H2 target, 1.microA')
 1300 FORMAT(/' === ',A16,' particle',I2,' rate=',E12.3,'  for '
     +     ,F11.6,'<theta LAB<',F11.6,2X,F7.3,'<P/Pbeam LAB<',F7.3
     +     ,' Liquid H2 target ',F5.1,'cm',3X,E10.3,' beam particles')
 1500 FORMAT(/' *** OUINIT ',A16,' Error: error in IPHOTVMP'
     +     ,',IPHOTVMT,PHOTVMTT',3X,3I11)
 1600 FORMAT(/' *** OUINIT Error: Annihilation: beam type .NE. 2'
     +     ,' IBEAMPAR=',I3,'  Exit!')
 1700 FORMAT(//' === FILE OPENED cntevseeds.dat on lun=',I3
     +  ,'  for random generator seeds for events written to NTUPLE'
     +  ,' lrec=',I6)
 1800 FORMAT(/4X,'magnet type mother     Xcen      Ycen      Zcen     '
     +      ,'rot  '
     +      ,' 1/2 size: X       Y       Z   field/scale     flags ')
 1820 FORMAT(6X,I2,3X,I3,3X,A4,2X,3F10.2,3X,I3,8X,3F8.2,2X,F10.4
     +      ,2X,6F7.1)
      END
